/* 5. LOGICAL OPERATORS(NOT!, AND&&, OR||)
a. NOT! *it is also a unary operator.
*priority level is same unary operators.
*it inverts the truth value of statement i.e. T>F & F<T.

b. AND&& *it is a binery operator. *it is trying combined both the results.
*   statement1&&statement2   = result
   - false    | x            = false(we don't need to see 2nd statement if first statement is false then result(overall statement) is false.
   - true     | false        = false
   - true     | true         = true

c. OR||  *just opposite of &&
*  - true     | x            = true(we don't need see next statement)
   - true     | false        = true
   - false    | false        = false






*/

#include<stdio.h>
#include<conio.h>
main()
{
int x=5,y;
clrscr();
y=x<4||x<10;
printf("%d",y);
getch();
}


/*
a. (!)NOT OPERATOR
x=5
y=x>4 o/p=1
y=!x>4 o/p=0 bcz ! having highest priority so we know x=5, and 5 is a
non-zero value so ! operators converts it in 0. now we have 0>4 its false
so how ! operator inverts o/p.

x=0
y=!x<5 o/p=1

b.(&&)AND OPERATOR
x=5
y=x>4&&x<10 o/p=1(true) bcz st1 is true and st2 is also true so result will
		be true.
y=x<4&&x<10 o/p=0(false) bcz st1 is false and st2 is true but we don't need to
		see st2 bcz result is false.
y=x<4&&x<10 o/p=0(false) bcz both are false.

c. (||)OR OPERATOR
x=5
y=x>4||x<10 o/p=1(true) bcz both are true
y=x<4||x<10 o/p=1(true) second is true
y=x<4||X>10 o/p=0(false) both are false







*/