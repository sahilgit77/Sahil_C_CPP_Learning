/* functions in c - part 2

ways to define a function-
 -takes nothing, returns nothing
 -takes something, returns nothing
 -takes nothing, returns something
 -takes something, returns something


-takes nothing, returns nothing
				  */
#include<stdio.h>
#include<conio.h>
void main() //here we write void bcz main returns nothing
{
 void add(void); //declaraion of add fun   //(void) means no arguments pass in fun.
 clrscr();         //takes nothing nature
 add();    //if we use add(1) then control again come to the add after execution so here add() empty thats why control go ahead to the getch()
 getch();
}
void add()
{
  int a,b,sum;
  printf("enter two numbers");    //take something nature
  scanf("%d %d",&a,&b);
  printf("%d",sum=a+b);
}

/* Summary of this eg.

- here add() fun is of takes nothing nature so if a fun is of takes nothing
nautre then its paranchus() is always empty so add(empty).

- if () are empty then takes nothing and if (something) then take samething
 at both fun defination and declaration

- if a function is return nothing then write void before it while defining
so void add()

-this fun[add()] is of takes nothing type and takes data from user and
 perform operation these data and return nothing. return means to return a
 value to fun which calls it i.e. return a value to add() which call it and
 we use "return" keyword for return something

-fun declaration is also k/n as fun prototype.
 in any program compiler need understand the meaning of every word, compiler
 can understand only keywords except this every word is new for compiler.
 so if we want that compiler undestad every word in the program we do
 declaration of words.

-defination of predefined words stored in the library files and there
 declaration stored in header file.
 eg int a,b,c //here we do declaration of variables a,b,c
 clrscr(); and getch(); declaration stored in #include<conio.h>
 printf();, scanf(); declaration stored in #include<stdio.h>

-that is fun declaration----returntype(datatype) nameoffun();
			  so       void add(void)
			  if fun returns nothing then we write void

- we don't need to write return type while fun calling. and we have to
write return while fun declaration and fun defination.

			  */